1,9c1,9
< bool propagateGivesConflict (vector<int> litsToPropagate) {
<     bool fallo = false;
<     int pSize = litsToPropagate.size();
<     for(uint j = 0; j < pSize and not fallo; ++j) {
<         vector<int> vAux;
<         if (litsToPropagate[j] > 0) vAux = clausNeg[litsToPropagate[j]];
<         else vAux = clausPos[abs(litsToPropagate[j])];
<         int vSize = vAux.size();
<         for (uint i = 0; i < vSize; ++i) {
---
> bool propagateGivesConflict (vector<int> nextLitsToPropagate) {
>     bool conflict = false;
>     int size=nextLitsToPropagate.size();
>     for (int i=0;not conflict and i<size;++i){
>         vector<int> clausAViatjar;
>         if (nextLitsToPropagate[i]>0) clausAViatjar = clausNeg[nextLitsToPropagate[i]];
>         else clausAViatjar = clausPos[nextLitsToPropagate[i]];
>         int aparicions = clausAViatjar.size();
>         for (int j=0;j<aparicions;++j){
13,14c13,14
<             for (uint k = 0; not someLitTrue and k < clauses[vAux[i]].size(); ++k){
<                 int val = currentValueInModel(clauses[vAux[i]][k]);
---
>             for (int k=0;not someLitTrue and k<clauses[clausAViatjar[j]].size();++k){
>                 int val = currentValueInModel(clauses[clausAViatjar[j]][k]);
16c16
<                 else if (val == UNDEF){ ++numUndefs; lastLitUndef = clauses[vAux[i]][k]; }
---
>                 else if (val == UNDEF){ ++numUndefs; lastLitUndef = clauses[clausAViatjar[j]][k];}
18,21c18,21
<             if (not someLitTrue and numUndefs == 0) {
<                 fallo = true; // conflict! all lits false
<                 if (litsToPropagate[j] > 0) ++conflictivePos[litsToPropagate[j]];
<                 else ++conflictiveNeg[-litsToPropagate[j]];
---
>             if (not someLitTrue and numUndefs == 0){
>                 conflict=true; // conflict! all lits false
>                 if (nextLitsToPropagate[i]>0) ++conflictivePos[nextLitsToPropagate[i]];
>                 else ++conflictiveNeg[-nextLitsToPropagate[i]];
23c23
<             else if (not someLitTrue and numUndefs == 1 and not fallo) {
---
>             else if (not someLitTrue and numUndefs == 1 and not conflict){
25,26c25,26
<                 litsToPropagate.push_back(lastLitUndef);
<                 ++pSize;
---
>                 nextLitsToPropagate.push_back(lastLitUndef);
>                 ++size;
30c30
<     return fallo;
---
>     return conflict;
